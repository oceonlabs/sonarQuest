import {
  DEV,
  DevtoolsContext,
  For,
  PLUGIN_CONTAINER_ID,
  PLUGIN_TITLE_CONTAINER_ID,
  Show,
  TANSTACK_DEVTOOLS,
  addEventListener,
  className,
  createComponent,
  createEffect,
  createMemo,
  createRenderEffect,
  createRoot,
  createSignal,
  createUniqueId,
  delegateEvents,
  getOwner,
  insert,
  isServer,
  memo,
  on,
  onCleanup,
  setAttribute,
  template,
  untrack,
  uppercaseFirstLetter,
  use,
  useContext
} from "./chunk-7SXU2UNK.js";
import {
  clsx_default
} from "./chunk-U7P2NEEE.js";
import "./chunk-24O5ED5J.js";

// node_modules/@solid-primitives/utils/dist/index.js
var isClient = !isServer;
var isDev = isClient && !!DEV;
var arrayEquals = (a2, b2) => a2 === b2 || a2.length === b2.length && a2.every((e2, i2) => e2 === b2[i2]);
var tryOnCleanup = isDev ? (fn) => getOwner() ? onCleanup(fn) : fn : onCleanup;

// node_modules/@solid-primitives/event-listener/dist/eventListener.js
function makeEventListener(target, type, handler, options) {
  target.addEventListener(type, handler, options);
  return tryOnCleanup(target.removeEventListener.bind(target, type, handler, options));
}

// node_modules/@solid-primitives/rootless/dist/index.js
function createSingletonRoot(factory, detachedOwner = getOwner()) {
  let listeners = 0, value, disposeRoot;
  return () => {
    listeners++;
    onCleanup(() => {
      listeners--;
      queueMicrotask(() => {
        if (!listeners && disposeRoot) {
          disposeRoot();
          disposeRoot = value = void 0;
        }
      });
    });
    if (!disposeRoot) {
      createRoot((dispose) => value = factory(disposeRoot = dispose), detachedOwner);
    }
    return value;
  };
}

// node_modules/@solid-primitives/keyboard/dist/index.js
function equalsKeyHoldSequence(sequence, model) {
  for (let i2 = sequence.length - 1; i2 >= 0; i2--) {
    const _model = model.slice(0, i2 + 1);
    if (!arrayEquals(sequence[i2], _model))
      return false;
  }
  return true;
}
var useKeyDownEvent = createSingletonRoot(() => {
  if (isServer) {
    return () => null;
  }
  const [event, setEvent] = createSignal(null);
  makeEventListener(window, "keydown", (e2) => {
    setEvent(e2);
    setTimeout(() => setEvent(null));
  });
  return event;
});
var useKeyDownList = createSingletonRoot(() => {
  if (isServer) {
    const keys2 = () => [];
    keys2[0] = keys2;
    keys2[1] = { event: () => null };
    keys2[Symbol.iterator] = function* () {
      yield keys2[0];
      yield keys2[1];
    };
    return keys2;
  }
  const [pressedKeys, setPressedKeys] = createSignal([]), reset = () => setPressedKeys([]), event = useKeyDownEvent();
  makeEventListener(window, "keydown", (e2) => {
    if (e2.repeat || typeof e2.key !== "string")
      return;
    const key = e2.key.toUpperCase(), currentKeys = pressedKeys();
    if (currentKeys.includes(key))
      return;
    const keys2 = [...currentKeys, key];
    if (currentKeys.length === 0 && key !== "ALT" && key !== "CONTROL" && key !== "META" && key !== "SHIFT") {
      if (e2.shiftKey)
        keys2.unshift("SHIFT");
      if (e2.altKey)
        keys2.unshift("ALT");
      if (e2.ctrlKey)
        keys2.unshift("CONTROL");
      if (e2.metaKey)
        keys2.unshift("META");
    }
    setPressedKeys(keys2);
  });
  makeEventListener(window, "keyup", (e2) => {
    if (typeof e2.key !== "string")
      return;
    const key = e2.key.toUpperCase();
    setPressedKeys((prev) => prev.filter((_key) => _key !== key));
  });
  makeEventListener(window, "blur", reset);
  makeEventListener(window, "contextmenu", (e2) => {
    e2.defaultPrevented || reset();
  });
  pressedKeys[0] = pressedKeys;
  pressedKeys[1] = { event };
  pressedKeys[Symbol.iterator] = function* () {
    yield pressedKeys[0];
    yield pressedKeys[1];
  };
  return pressedKeys;
});
var useCurrentlyHeldKey = createSingletonRoot(() => {
  if (isServer) {
    return () => null;
  }
  const keys2 = useKeyDownList();
  let prevKeys = untrack(keys2);
  return createMemo(() => {
    const _keys = keys2();
    const prev = prevKeys;
    prevKeys = _keys;
    if (prev.length === 0 && _keys.length === 1)
      return _keys[0];
    return null;
  });
});
var useKeyDownSequence = createSingletonRoot(() => {
  if (isServer) {
    return () => [];
  }
  const keys2 = useKeyDownList();
  return createMemo((prev) => {
    if (keys2().length === 0)
      return [];
    return [...prev, keys2()];
  }, []);
});
function createShortcut(keys2, callback, options = {}) {
  if (isServer || !keys2.length) {
    return;
  }
  keys2 = keys2.map((key) => key.toUpperCase());
  const { preventDefault = true } = options, event = useKeyDownEvent(), sequence = useKeyDownSequence();
  let reset = false;
  const handleSequenceWithReset = (sequence2) => {
    if (!sequence2.length)
      return reset = false;
    if (reset)
      return;
    const e2 = event();
    if (sequence2.length < keys2.length) {
      if (equalsKeyHoldSequence(sequence2, keys2.slice(0, sequence2.length))) {
        preventDefault && e2 && e2.preventDefault();
      } else {
        reset = true;
      }
    } else {
      reset = true;
      if (equalsKeyHoldSequence(sequence2, keys2)) {
        preventDefault && e2 && e2.preventDefault();
        callback(e2);
      }
    }
  };
  const handleSequenceWithoutReset = (sequence2) => {
    const last = sequence2.at(-1);
    if (!last)
      return;
    const e2 = event();
    if (preventDefault && last.length < keys2.length) {
      if (arrayEquals(last, keys2.slice(0, keys2.length - 1))) {
        e2 && e2.preventDefault();
      }
      return;
    }
    if (arrayEquals(last, keys2)) {
      const prev = sequence2.at(-2);
      if (!prev || arrayEquals(prev, keys2.slice(0, keys2.length - 1))) {
        preventDefault && e2 && e2.preventDefault();
        callback(e2);
      }
    }
  };
  createEffect(on(sequence, options.requireReset ? handleSequenceWithReset : handleSequenceWithoutReset));
}

// node_modules/@tanstack/devtools/dist/esm/context/use-devtools-context.js
var useDevtoolsContext = () => {
  const context = useContext(DevtoolsContext);
  if (context === void 0) {
    throw new Error(
      "useDevtoolsShellContext must be used within a ShellContextProvider"
    );
  }
  return context;
};
var usePlugins = () => {
  const { store, setStore } = useDevtoolsContext();
  const plugins = createMemo(() => store.plugins);
  const activePlugin = createMemo(() => store.state.activePlugin);
  const setActivePlugin = (pluginId) => {
    setStore((prev) => ({
      ...prev,
      state: {
        ...prev.state,
        activePlugin: pluginId
      }
    }));
  };
  return { plugins, setActivePlugin, activePlugin };
};
var useDevtoolsState = () => {
  const { store, setStore } = useDevtoolsContext();
  const state = createMemo(() => store.state);
  const setState = (newState) => {
    setStore((prev) => ({
      ...prev,
      state: {
        ...prev.state,
        ...newState
      }
    }));
  };
  return { state, setState };
};
var useDevtoolsSettings = () => {
  const { store, setStore } = useDevtoolsContext();
  const settings = createMemo(() => store.settings);
  const setSettings = (newSettings) => {
    setStore((prev) => ({
      ...prev,
      settings: {
        ...prev.settings,
        ...newSettings
      }
    }));
  };
  return { setSettings, settings };
};
var usePersistOpen = () => {
  const { state, setState } = useDevtoolsState();
  const persistOpen = createMemo(() => state().persistOpen);
  const setPersistOpen = (value) => {
    setState({ persistOpen: value });
  };
  return { persistOpen, setPersistOpen };
};
var useHeight = () => {
  const { state, setState } = useDevtoolsState();
  const height = createMemo(() => state().height);
  const setHeight = (newHeight) => {
    setState({ height: newHeight });
  };
  return { height, setHeight };
};

// node_modules/@tanstack/devtools/dist/esm/hooks/use-disable-tabbing.js
var recursivelyChangeTabIndex = (node, remove = true) => {
  if (remove) {
    node.setAttribute("tabIndex", "-1");
  } else {
    node.removeAttribute("tabIndex");
  }
  for (const child of node.children) {
    recursivelyChangeTabIndex(child, remove);
  }
};
var useDisableTabbing = (isOpen) => {
  createEffect(() => {
    const el = document.getElementById(TANSTACK_DEVTOOLS);
    if (!el) return;
    recursivelyChangeTabIndex(el, !isOpen());
  });
};

// node_modules/goober/dist/goober.modern.js
var e = { data: "" };
var t = (t2) => "object" == typeof window ? ((t2 ? t2.querySelector("#_goober") : window._goober) || Object.assign((t2 || document.head).appendChild(document.createElement("style")), { innerHTML: " ", id: "_goober" })).firstChild : t2 || e;
var l = /(?:([\u0080-\uFFFF\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\s*)/g;
var a = /\/\*[^]*?\*\/|  +/g;
var n = /\n+/g;
var o = (e2, t2) => {
  let r = "", l2 = "", a2 = "";
  for (let n2 in e2) {
    let c2 = e2[n2];
    "@" == n2[0] ? "i" == n2[1] ? r = n2 + " " + c2 + ";" : l2 += "f" == n2[1] ? o(c2, n2) : n2 + "{" + o(c2, "k" == n2[1] ? "" : t2) + "}" : "object" == typeof c2 ? l2 += o(c2, t2 ? t2.replace(/([^,])+/g, (e3) => n2.replace(/([^,]*:\S+\([^)]*\))|([^,])+/g, (t3) => /&/.test(t3) ? t3.replace(/&/g, e3) : e3 ? e3 + " " + t3 : t3)) : n2) : null != c2 && (n2 = /^--/.test(n2) ? n2 : n2.replace(/[A-Z]/g, "-$&").toLowerCase(), a2 += o.p ? o.p(n2, c2) : n2 + ":" + c2 + ";");
  }
  return r + (t2 && a2 ? t2 + "{" + a2 + "}" : a2) + l2;
};
var c = {};
var s = (e2) => {
  if ("object" == typeof e2) {
    let t2 = "";
    for (let r in e2) t2 += r + s(e2[r]);
    return t2;
  }
  return e2;
};
var i = (e2, t2, r, i2, p2) => {
  let u2 = s(e2), d = c[u2] || (c[u2] = ((e3) => {
    let t3 = 0, r2 = 11;
    for (; t3 < e3.length; ) r2 = 101 * r2 + e3.charCodeAt(t3++) >>> 0;
    return "go" + r2;
  })(u2));
  if (!c[d]) {
    let t3 = u2 !== e2 ? e2 : ((e3) => {
      let t4, r2, o2 = [{}];
      for (; t4 = l.exec(e3.replace(a, "")); ) t4[4] ? o2.shift() : t4[3] ? (r2 = t4[3].replace(n, " ").trim(), o2.unshift(o2[0][r2] = o2[0][r2] || {})) : o2[0][t4[1]] = t4[2].replace(n, " ").trim();
      return o2[0];
    })(e2);
    c[d] = o(p2 ? { ["@keyframes " + d]: t3 } : t3, r ? "" : "." + d);
  }
  let f = r && c.g ? c.g : null;
  return r && (c.g = c[d]), ((e3, t3, r2, l2) => {
    l2 ? t3.data = t3.data.replace(l2, e3) : -1 === t3.data.indexOf(e3) && (t3.data = r2 ? e3 + t3.data : t3.data + e3);
  })(c[d], t2, i2, f), d;
};
var p = (e2, t2, r) => e2.reduce((e3, l2, a2) => {
  let n2 = t2[a2];
  if (n2 && n2.call) {
    let e4 = n2(r), t3 = e4 && e4.props && e4.props.className || /^go/.test(e4) && e4;
    n2 = t3 ? "." + t3 : e4 && "object" == typeof e4 ? e4.props ? "" : o(e4, "") : false === e4 ? "" : e4;
  }
  return e3 + l2 + (null == n2 ? "" : n2);
}, "");
function u(e2) {
  let r = this || {}, l2 = e2.call ? e2(r.p) : e2;
  return i(l2.unshift ? l2.raw ? p(l2, [].slice.call(arguments, 1), r.p) : l2.reduce((e3, t2) => Object.assign(e3, t2 && t2.call ? t2(r.p) : t2), {}) : l2, t(r.target), r.g, r.o, r.k);
}
var b = u.bind({ g: 1 });
var h = u.bind({ k: 1 });

// node_modules/@tanstack/devtools-ui/dist/esm/styles/tokens.js
var tokens = {
  colors: {
    darkGray: {
      800: "#111318"
    },
    gray: {
      100: "#f2f4f7",
      400: "#98a2b3",
      500: "#667085",
      600: "#475467",
      700: "#344054"
    },
    purple: {
      400: "#9B8AFB",
      500: "#7A5AF8"
    }
  },
  alpha: {
    20: "33"
  },
  font: {
    fontFamily: {
      sans: "ui-sans-serif, Inter, system-ui, sans-serif, sans-serif",
      mono: `ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace`
    }
  },
  size: {
    0.5: "calc(var(--tsrd-font-size) * 0.125)",
    12: "calc(var(--tsrd-font-size) * 3)"
  }
};

// node_modules/@tanstack/devtools-ui/dist/esm/styles/use-styles.js
var stylesFactory = () => {
  const { colors, font, size, alpha } = tokens;
  const { fontFamily } = font;
  const css = u;
  return {
    logo: css`
      cursor: pointer;
      display: flex;
      flex-direction: column;
      background-color: transparent;
      border: none;
      width: ${size[12]};
      height: ${size[12]};
      font-family: ${fontFamily.sans};
      gap: ${tokens.size[0.5]};
      padding: 0px;
      &:hover {
        opacity: 0.7;
      }
    `,
    selectWrapper: css`
      width: 100%;
      max-width: 300px;
      display: flex;
      flex-direction: column;
      gap: 0.375rem;
    `,
    selectContainer: css`
      width: 100%;
    `,
    selectLabel: css`
      font-size: 0.875rem;
      font-weight: 500;
      color: ${colors.gray[100]};
    `,
    selectDescription: css`
      font-size: 0.8rem;
      color: ${colors.gray[400]};
      margin: 0;
      line-height: 1.3;
    `,
    select: css`
      appearance: none;
      width: 100%;
      padding: 0.75rem 3rem 0.75rem 0.75rem;
      border-radius: 0.5rem;
      background-color: ${colors.darkGray[800]};
      color: ${colors.gray[100]};
      border: 1px solid ${colors.gray[700]};
      font-size: 0.875rem;
      transition: all 0.2s ease;
      cursor: pointer;

      /* Custom arrow */
      background-image: url("data:image/svg+xml;utf8,<svg fill='%236b7280' height='20' viewBox='0 0 24 24' width='20' xmlns='http://www.w3.org/2000/svg'><path d='M7 10l5 5 5-5z'/></svg>");
      background-repeat: no-repeat;
      background-position: right 0.75rem center;
      background-size: 1.25rem;

      &:hover {
        border-color: ${colors.gray[600]};
      }

      &:focus {
        outline: none;
        border-color: ${colors.purple[400]};
        box-shadow: 0 0 0 3px ${colors.purple[400]}${alpha[20]};
      }
    `,
    inputWrapper: css`
      width: 100%;
      max-width: 300px;
      display: flex;
      flex-direction: column;
      gap: 0.375rem;
    `,
    inputContainer: css`
      width: 100%;
    `,
    inputLabel: css`
      font-size: 0.875rem;
      font-weight: 500;
      color: ${colors.gray[100]};
    `,
    inputDescription: css`
      font-size: 0.8rem;
      color: ${colors.gray[400]};
      margin: 0;
      line-height: 1.3;
    `,
    input: css`
      appearance: none;
      width: 100%;
      padding: 0.75rem;
      border-radius: 0.5rem;
      background-color: ${colors.darkGray[800]};
      color: ${colors.gray[100]};
      border: 1px solid ${colors.gray[700]};
      font-size: 0.875rem;
      font-family: ${fontFamily.mono};
      transition: all 0.2s ease;

      &::placeholder {
        color: ${colors.gray[500]};
      }

      &:hover {
        border-color: ${colors.gray[600]};
      }

      &:focus {
        outline: none;
        border-color: ${colors.purple[400]};
        box-shadow: 0 0 0 3px ${colors.purple[400]}${alpha[20]};
      }
    `,
    checkboxWrapper: css`
      display: flex;
      align-items: flex-start;
      gap: 0.75rem;
      cursor: pointer;
      user-select: none;
      padding: 0.5rem;
      border-radius: 0.5rem;
      transition: background-color 0.2s ease;

      &:hover {
        background-color: ${colors.darkGray[800]};
      }
    `,
    checkboxContainer: css`
      width: 100%;
    `,
    checkboxLabelContainer: css`
      display: flex;
      flex-direction: column;
      gap: 0.25rem;
      flex: 1;
    `,
    checkbox: css`
      appearance: none;
      width: 1.25rem;
      height: 1.25rem;
      border: 2px solid ${colors.gray[700]};
      border-radius: 0.375rem;
      background-color: ${colors.darkGray[800]};
      display: grid;
      place-items: center;
      transition: all 0.2s ease;
      flex-shrink: 0;
      margin-top: 0.125rem;

      &:hover {
        border-color: ${colors.purple[400]};
      }

      &:checked {
        background-color: ${colors.purple[500]};
        border-color: ${colors.purple[500]};
      }

      &:checked::after {
        content: '';
        width: 0.4rem;
        height: 0.6rem;
        border: solid white;
        border-width: 0 2px 2px 0;
        transform: rotate(45deg);
        margin-top: -3px;
      }
    `,
    checkboxLabel: css`
      color: ${colors.gray[100]};
      font-size: 0.875rem;
      font-weight: 500;
      line-height: 1.4;
    `,
    checkboxDescription: css`
      color: ${colors.gray[400]};
      font-size: 0.8rem;
      line-height: 1.3;
    `
  };
};
function useStyles() {
  const [_styles] = createSignal(stylesFactory());
  return _styles;
}

// node_modules/@tanstack/devtools-ui/dist/esm/components/checkbox.js
var _tmpl$ = template(`<div><label><input type=checkbox><div>`);
var _tmpl$2 = template(`<span>`);
function Checkbox(props) {
  const styles = useStyles();
  const [isChecked, setIsChecked] = createSignal(props.checked || false);
  const handleChange = (e2) => {
    var _a;
    const checked = e2.target.checked;
    setIsChecked(checked);
    (_a = props.onChange) == null ? void 0 : _a.call(props, checked);
  };
  return (() => {
    var _el$ = _tmpl$(), _el$2 = _el$.firstChild, _el$3 = _el$2.firstChild, _el$4 = _el$3.nextSibling;
    _el$3.$$input = handleChange;
    insert(_el$4, (() => {
      var _c$ = memo(() => !!props.label);
      return () => _c$() && (() => {
        var _el$5 = _tmpl$2();
        insert(_el$5, () => props.label);
        createRenderEffect(() => className(_el$5, styles().checkboxLabel));
        return _el$5;
      })();
    })(), null);
    insert(_el$4, (() => {
      var _c$2 = memo(() => !!props.description);
      return () => _c$2() && (() => {
        var _el$6 = _tmpl$2();
        insert(_el$6, () => props.description);
        createRenderEffect(() => className(_el$6, styles().checkboxDescription));
        return _el$6;
      })();
    })(), null);
    createRenderEffect((_p$) => {
      var _v$ = styles().checkboxContainer, _v$2 = styles().checkboxWrapper, _v$3 = styles().checkbox, _v$4 = styles().checkboxLabelContainer;
      _v$ !== _p$.e && className(_el$, _p$.e = _v$);
      _v$2 !== _p$.t && className(_el$2, _p$.t = _v$2);
      _v$3 !== _p$.a && className(_el$3, _p$.a = _v$3);
      _v$4 !== _p$.o && className(_el$4, _p$.o = _v$4);
      return _p$;
    }, {
      e: void 0,
      t: void 0,
      a: void 0,
      o: void 0
    });
    createRenderEffect(() => _el$3.checked = isChecked());
    return _el$;
  })();
}
delegateEvents(["input"]);

// node_modules/@tanstack/devtools-ui/dist/esm/components/input.js
var _tmpl$3 = template(`<div><div><input>`);
var _tmpl$22 = template(`<label>`);
var _tmpl$32 = template(`<p>`);
function Input(props) {
  const styles = useStyles();
  const [val, setVal] = createSignal(props.value || "");
  const handleChange = (e2) => {
    var _a;
    const value = e2.target.value;
    setVal((prev) => prev !== value ? value : prev);
    (_a = props.onChange) == null ? void 0 : _a.call(props, value);
  };
  return (() => {
    var _el$ = _tmpl$3(), _el$2 = _el$.firstChild, _el$3 = _el$2.firstChild;
    insert(_el$2, (() => {
      var _c$ = memo(() => !!props.label);
      return () => _c$() && (() => {
        var _el$4 = _tmpl$22();
        insert(_el$4, () => props.label);
        createRenderEffect(() => className(_el$4, styles().inputLabel));
        return _el$4;
      })();
    })(), _el$3);
    insert(_el$2, (() => {
      var _c$2 = memo(() => !!props.description);
      return () => _c$2() && (() => {
        var _el$5 = _tmpl$32();
        insert(_el$5, () => props.description);
        createRenderEffect(() => className(_el$5, styles().inputDescription));
        return _el$5;
      })();
    })(), _el$3);
    _el$3.$$input = handleChange;
    createRenderEffect((_p$) => {
      var _v$ = styles().inputContainer, _v$2 = styles().inputWrapper, _v$3 = props.type || "text", _v$4 = styles().input, _v$5 = props.placeholder;
      _v$ !== _p$.e && className(_el$, _p$.e = _v$);
      _v$2 !== _p$.t && className(_el$2, _p$.t = _v$2);
      _v$3 !== _p$.a && setAttribute(_el$3, "type", _p$.a = _v$3);
      _v$4 !== _p$.o && className(_el$3, _p$.o = _v$4);
      _v$5 !== _p$.i && setAttribute(_el$3, "placeholder", _p$.i = _v$5);
      return _p$;
    }, {
      e: void 0,
      t: void 0,
      a: void 0,
      o: void 0,
      i: void 0
    });
    createRenderEffect(() => _el$3.value = val());
    return _el$;
  })();
}
delegateEvents(["input"]);

// node_modules/@tanstack/devtools-ui/dist/esm/components/select.js
var _tmpl$4 = template(`<div><div><select>`);
var _tmpl$23 = template(`<label>`);
var _tmpl$33 = template(`<p>`);
var _tmpl$42 = template(`<option>`);
function Select(props) {
  var _a;
  const styles = useStyles();
  const [selected, setSelected] = createSignal(props.value || ((_a = props.options[0]) == null ? void 0 : _a.value));
  const handleChange = (e2) => {
    var _a2;
    const value = e2.target.value;
    setSelected((prev) => prev !== value ? value : prev);
    (_a2 = props.onChange) == null ? void 0 : _a2.call(props, value);
  };
  return (() => {
    var _el$ = _tmpl$4(), _el$2 = _el$.firstChild, _el$3 = _el$2.firstChild;
    insert(_el$2, (() => {
      var _c$ = memo(() => !!props.label);
      return () => _c$() && (() => {
        var _el$4 = _tmpl$23();
        insert(_el$4, () => props.label);
        createRenderEffect(() => className(_el$4, styles().selectLabel));
        return _el$4;
      })();
    })(), _el$3);
    insert(_el$2, (() => {
      var _c$2 = memo(() => !!props.description);
      return () => _c$2() && (() => {
        var _el$5 = _tmpl$33();
        insert(_el$5, () => props.description);
        createRenderEffect(() => className(_el$5, styles().selectDescription));
        return _el$5;
      })();
    })(), _el$3);
    _el$3.$$input = handleChange;
    insert(_el$3, () => props.options.map((opt) => (() => {
      var _el$6 = _tmpl$42();
      insert(_el$6, () => opt.label);
      createRenderEffect(() => _el$6.value = opt.value);
      return _el$6;
    })()));
    createRenderEffect((_p$) => {
      var _v$ = styles().selectContainer, _v$2 = styles().selectWrapper, _v$3 = styles().select;
      _v$ !== _p$.e && className(_el$, _p$.e = _v$);
      _v$2 !== _p$.t && className(_el$2, _p$.t = _v$2);
      _v$3 !== _p$.a && className(_el$3, _p$.a = _v$3);
      return _p$;
    }, {
      e: void 0,
      t: void 0,
      a: void 0
    });
    createRenderEffect(() => _el$3.value = selected());
    return _el$;
  })();
}
delegateEvents(["input"]);

// node_modules/@tanstack/devtools-ui/dist/esm/components/logo.js
var _tmpl$5 = template(`<svg xmlns=http://www.w3.org/2000/svg enable-background="new 0 0 634 633"viewBox="0 0 634 633"><g transform=translate(1)><linearGradient x1=-641.486 x2=-641.486 y1=856.648 y2=855.931 gradientTransform="matrix(633 0 0 -633 406377 542258)"gradientUnits=userSpaceOnUse><stop offset=0 stop-color=#6bdaff></stop><stop offset=0.319 stop-color=#f9ffb5></stop><stop offset=0.706 stop-color=#ffa770></stop><stop offset=1 stop-color=#ff7373></stop></linearGradient><circle cx=316.5 cy=316.5 r=316.5 fill-rule=evenodd clip-rule=evenodd></circle><defs><filter width=454 height=396.9 x=-137.5 y=412 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0"></feColorMatrix></filter></defs><mask width=454 height=396.9 x=-137.5 y=412 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#FFF fill-rule=evenodd clip-rule=evenodd></circle></g></mask><ellipse cx=89.5 cy=610.5 fill=#015064 fill-rule=evenodd stroke=#00CFE2 stroke-width=25 clip-rule=evenodd rx=214.5 ry=186></ellipse><defs><filter width=454 height=396.9 x=316.5 y=412 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0"></feColorMatrix></filter></defs><mask width=454 height=396.9 x=316.5 y=412 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#FFF fill-rule=evenodd clip-rule=evenodd></circle></g></mask><ellipse cx=543.5 cy=610.5 fill=#015064 fill-rule=evenodd stroke=#00CFE2 stroke-width=25 clip-rule=evenodd rx=214.5 ry=186></ellipse><defs><filter width=454 height=396.9 x=-137.5 y=450 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0"></feColorMatrix></filter></defs><mask width=454 height=396.9 x=-137.5 y=450 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#FFF fill-rule=evenodd clip-rule=evenodd></circle></g></mask><ellipse cx=89.5 cy=648.5 fill=#015064 fill-rule=evenodd stroke=#00A8B8 stroke-width=25 clip-rule=evenodd rx=214.5 ry=186></ellipse><defs><filter width=454 height=396.9 x=316.5 y=450 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0"></feColorMatrix></filter></defs><mask width=454 height=396.9 x=316.5 y=450 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#FFF fill-rule=evenodd clip-rule=evenodd></circle></g></mask><ellipse cx=543.5 cy=648.5 fill=#015064 fill-rule=evenodd stroke=#00A8B8 stroke-width=25 clip-rule=evenodd rx=214.5 ry=186></ellipse><defs><filter width=454 height=396.9 x=-137.5 y=486 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0"></feColorMatrix></filter></defs><mask width=454 height=396.9 x=-137.5 y=486 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#FFF fill-rule=evenodd clip-rule=evenodd></circle></g></mask><ellipse cx=89.5 cy=684.5 fill=#015064 fill-rule=evenodd stroke=#007782 stroke-width=25 clip-rule=evenodd rx=214.5 ry=186></ellipse><defs><filter width=454 height=396.9 x=316.5 y=486 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0"></feColorMatrix></filter></defs><mask width=454 height=396.9 x=316.5 y=486 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#FFF fill-rule=evenodd clip-rule=evenodd></circle></g></mask><ellipse cx=543.5 cy=684.5 fill=#015064 fill-rule=evenodd stroke=#007782 stroke-width=25 clip-rule=evenodd rx=214.5 ry=186></ellipse><defs><filter width=176.9 height=129.3 x=272.2 y=308 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0"></feColorMatrix></filter></defs><mask width=176.9 height=129.3 x=272.2 y=308 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#FFF fill-rule=evenodd clip-rule=evenodd></circle></g></mask><g><path fill=none stroke=#000 stroke-linecap=round stroke-linejoin=bevel stroke-width=11 d="M436 403.2l-5 28.6m-140-90.3l-10.9 62m52.8-19.4l-4.3 27.1"></path><linearGradient x1=-645.656 x2=-646.499 y1=854.878 y2=854.788 gradientTransform="matrix(-184.159 -32.4722 11.4608 -64.9973 -128419.844 34938.836)"gradientUnits=userSpaceOnUse><stop offset=0 stop-color=#ee2700></stop><stop offset=1 stop-color=#ff008e></stop></linearGradient><path fill-rule=evenodd d="M344.1 363l97.7 17.2c5.8 2.1 8.2 6.2 7.1 12.1-1 5.9-4.7 9.2-11 9.9l-106-18.7-57.5-59.2c-3.2-4.8-2.9-9.1.8-12.8 3.7-3.7 8.3-4.4 13.7-2.1l55.2 53.6z"clip-rule=evenodd></path><path fill=#D8D8D8 fill-rule=evenodd stroke=#FFF stroke-linecap=round stroke-linejoin=bevel stroke-width=7 d="M428.3 384.5l.9-6.5m-33.9 1.5l.9-6.5m-34 .5l.9-6.1m-38.9-16.1l4.2-3.9m-25.2-16.1l4.2-3.9"clip-rule=evenodd></path></g><defs><filter width=280.6 height=317.4 x=73.2 y=113.9 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0"></feColorMatrix></filter></defs><mask width=280.6 height=317.4 x=73.2 y=113.9 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#FFF fill-rule=evenodd clip-rule=evenodd></circle></g></mask><g><linearGradient x1=-646.8 x2=-646.8 y1=854.844 y2=853.844 gradientTransform="matrix(-100.1751 48.8587 -97.9753 -200.879 19124.773 203538.61)"gradientUnits=userSpaceOnUse><stop offset=0 stop-color=#a17500></stop><stop offset=1 stop-color=#5d2100></stop></linearGradient><path fill-rule=evenodd d="M192.3 203c8.1 37.3 14 73.6 17.8 109.1 3.8 35.4 2.8 75.2-2.9 119.2l61.2-16.7c-15.6-59-25.2-97.9-28.6-116.6-3.4-18.7-10.8-51.8-22.2-99.6l-25.3 4.6"clip-rule=evenodd></path><linearGradient x1=-635.467 x2=-635.467 y1=852.115 y2=851.115 gradientTransform="matrix(92.6873 4.8575 2.0257 -38.6535 57323.695 36176.047)"gradientUnits=userSpaceOnUse><stop offset=0 stop-color=#2f8a00></stop><stop offset=1 stop-color=#90ff57></stop></linearGradient><path fill-rule=evenodd stroke=#2F8A00 stroke-width=13 d="M195 183.9s-12.6-22.1-36.5-29.9c-15.9-5.2-34.4-1.5-55.5 11.1 15.9 14.3 29.5 22.6 40.7 24.9 16.8 3.6 51.3-6.1 51.3-6.1z"clip-rule=evenodd></path><linearGradient x1=-636.573 x2=-636.573 y1=855.444 y2=854.444 gradientTransform="matrix(109.9945 5.7646 6.3597 -121.3507 64719.133 107659.336)"gradientUnits=userSpaceOnUse><stop offset=0 stop-color=#2f8a00></stop><stop offset=1 stop-color=#90ff57></stop></linearGradient><path fill-rule=evenodd stroke=#2F8A00 stroke-width=13 d="M194.9 184.5s-47.5-8.5-83.2 15.7c-23.8 16.2-34.3 49.3-31.6 99.3 30.3-27.8 52.1-48.5 65.2-61.9 19.8-20 49.6-53.1 49.6-53.1z"clip-rule=evenodd></path><linearGradient x1=-632.145 x2=-632.145 y1=854.174 y2=853.174 gradientTransform="matrix(62.9558 3.2994 3.5021 -66.8246 37035.367 59284.227)"gradientUnits=userSpaceOnUse><stop offset=0 stop-color=#2f8a00></stop><stop offset=1 stop-color=#90ff57></stop></linearGradient><path fill-rule=evenodd stroke=#2F8A00 stroke-width=13 d="M195 183.9c-.8-21.9 6-38 20.6-48.2 14.6-10.2 29.8-15.3 45.5-15.3-6.1 21.4-14.5 35.8-25.2 43.4-10.7 7.5-24.4 14.2-40.9 20.1z"clip-rule=evenodd></path><linearGradient x1=-638.224 x2=-638.224 y1=853.801 y2=852.801 gradientTransform="matrix(152.4666 7.9904 3.0934 -59.0251 94939.86 55646.855)"gradientUnits=userSpaceOnUse><stop offset=0 stop-color=#2f8a00></stop><stop offset=1 stop-color=#90ff57></stop></linearGradient><path fill-rule=evenodd stroke=#2F8A00 stroke-width=13 d="M194.9 184.5c31.9-30 64.1-39.7 96.7-29 32.6 10.7 50.8 30.4 54.6 59.1-35.2-5.5-60.4-9.6-75.8-12.1-15.3-2.6-40.5-8.6-75.5-18z"clip-rule=evenodd></path><linearGradient x1=-637.723 x2=-637.723 y1=855.103 y2=854.103 gradientTransform="matrix(136.467 7.1519 5.2165 -99.5377 82830.875 89859.578)"gradientUnits=userSpaceOnUse><stop offset=0 stop-color=#2f8a00></stop><stop offset=1 stop-color=#90ff57></stop></linearGradient><path fill-rule=evenodd stroke=#2F8A00 stroke-width=13 d="M194.9 184.5c35.8-7.6 65.6-.2 89.2 22 23.6 22.2 37.7 49 42.3 80.3-39.8-9.7-68.3-23.8-85.5-42.4-17.2-18.5-32.5-38.5-46-59.9z"clip-rule=evenodd></path><linearGradient x1=-631.79 x2=-631.79 y1=855.872 y2=854.872 gradientTransform="matrix(60.8683 3.19 8.7771 -167.4773 31110.818 145537.61)"gradientUnits=userSpaceOnUse><stop offset=0 stop-color=#2f8a00></stop><stop offset=1 stop-color=#90ff57></stop></linearGradient><path fill-rule=evenodd stroke=#2F8A00 stroke-width=13 d="M194.9 184.5c-33.6 13.8-53.6 35.7-60.1 65.6-6.5 29.9-3.6 63.1 8.7 99.6 27.4-40.3 43.2-69.6 47.4-88 4.2-18.3 5.5-44.1 4-77.2z"clip-rule=evenodd></path><path fill=none stroke=#2F8A00 stroke-linecap=round stroke-width=8 d="M196.5 182.3c-14.8 21.6-25.1 41.4-30.8 59.4-5.7 18-9.4 33-11.1 45.1"></path><path fill=none stroke=#2F8A00 stroke-linecap=round stroke-width=8 d="M194.8 185.7c-24.4 1.7-43.8 9-58.1 21.8-14.3 12.8-24.7 25.4-31.3 37.8m99.1-68.9c29.7-6.7 52-8.4 67-5 15 3.4 26.9 8.7 35.8 15.9m-110.8-5.9c20.3 9.9 38.2 20.5 53.9 31.9 15.7 11.4 27.4 22.1 35.1 32"></path></g><defs><filter width=532 height=633 x=50.5 y=399 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0"></feColorMatrix></filter></defs><mask width=532 height=633 x=50.5 y=399 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#FFF fill-rule=evenodd clip-rule=evenodd></circle></g></mask><linearGradient x1=-641.104 x2=-641.278 y1=856.577 y2=856.183 gradientTransform="matrix(532 0 0 -633 341484.5 542657)"gradientUnits=userSpaceOnUse><stop offset=0 stop-color=#fff400></stop><stop offset=1 stop-color=#3c8700></stop></linearGradient><ellipse cx=316.5 cy=715.5 fill-rule=evenodd clip-rule=evenodd rx=266 ry=316.5></ellipse><defs><filter width=288 height=283 x=391 y=-24 filterUnits=userSpaceOnUse><feColorMatrix values="1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0"></feColorMatrix></filter></defs><mask width=288 height=283 x=391 y=-24 maskUnits=userSpaceOnUse><g><circle cx=316.5 cy=316.5 r=316.5 fill=#FFF fill-rule=evenodd clip-rule=evenodd></circle></g></mask><g><g transform="translate(397 -24)"><linearGradient x1=-1036.672 x2=-1036.672 y1=880.018 y2=879.018 gradientTransform="matrix(227 0 0 -227 235493 199764)"gradientUnits=userSpaceOnUse><stop offset=0 stop-color=#ffdf00></stop><stop offset=1 stop-color=#ff9d00></stop></linearGradient><circle cx=168.5 cy=113.5 r=113.5 fill-rule=evenodd clip-rule=evenodd></circle><linearGradient x1=-1017.329 x2=-1018.602 y1=658.003 y2=657.998 gradientTransform="matrix(30 0 0 -1 30558 771)"gradientUnits=userSpaceOnUse><stop offset=0 stop-color=#ffa400></stop><stop offset=1 stop-color=#ff5e00></stop></linearGradient><path fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12 d="M30 113H0"></path><linearGradient x1=-1014.501 x2=-1015.774 y1=839.985 y2=839.935 gradientTransform="matrix(26.5 0 0 -5.5 26925 4696.5)"gradientUnits=userSpaceOnUse><stop offset=0 stop-color=#ffa400></stop><stop offset=1 stop-color=#ff5e00></stop></linearGradient><path fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12 d="M33.5 79.5L7 74"></path><linearGradient x1=-1016.59 x2=-1017.862 y1=852.671 y2=852.595 gradientTransform="matrix(29 0 0 -8 29523 6971)"gradientUnits=userSpaceOnUse><stop offset=0 stop-color=#ffa400></stop><stop offset=1 stop-color=#ff5e00></stop></linearGradient><path fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12 d="M34 146l-29 8"></path><linearGradient x1=-1011.984 x2=-1013.257 y1=863.523 y2=863.229 gradientTransform="matrix(24 0 0 -13 24339 11407)"gradientUnits=userSpaceOnUse><stop offset=0 stop-color=#ffa400></stop><stop offset=1 stop-color=#ff5e00></stop></linearGradient><path fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12 d="M45 177l-24 13"></path><linearGradient x1=-1006.673 x2=-1007.946 y1=869.279 y2=868.376 gradientTransform="matrix(20 0 0 -19 20205 16720)"gradientUnits=userSpaceOnUse><stop offset=0 stop-color=#ffa400></stop><stop offset=1 stop-color=#ff5e00></stop></linearGradient><path fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12 d="M67 204l-20 19"></path><linearGradient x1=-992.85 x2=-993.317 y1=871.258 y2=870.258 gradientTransform="matrix(13.8339 0 0 -22.8467 13825.796 20131.938)"gradientUnits=userSpaceOnUse><stop offset=0 stop-color=#ffa400></stop><stop offset=1 stop-color=#ff5e00></stop></linearGradient><path fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12 d="M94.4 227l-13.8 22.8"></path><linearGradient x1=-953.835 x2=-953.965 y1=871.9 y2=870.9 gradientTransform="matrix(7.5 0 0 -24.5 7278 21605)"gradientUnits=userSpaceOnUse><stop offset=0 stop-color=#ffa400></stop><stop offset=1 stop-color=#ff5e00></stop></linearGradient><path fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12 d="M127.5 243.5L120 268"></path><linearGradient x1=244.504 x2=244.496 y1=871.898 y2=870.898 gradientTransform="matrix(.5 0 0 -24.5 45.5 21614)"gradientUnits=userSpaceOnUse><stop offset=0 stop-color=#ffa400></stop><stop offset=1 stop-color=#ff5e00></stop></linearGradient><path fill=none stroke-linecap=round stroke-linejoin=bevel stroke-width=12 d="M167.5 252.5l.5 24.5">`);
function TanStackLogo() {
  const id = createUniqueId();
  const styles = useStyles();
  return (() => {
    var _el$ = _tmpl$5(), _el$2 = _el$.firstChild, _el$3 = _el$2.firstChild, _el$4 = _el$3.nextSibling, _el$5 = _el$4.nextSibling, _el$6 = _el$5.firstChild, _el$7 = _el$5.nextSibling, _el$8 = _el$7.firstChild, _el$9 = _el$7.nextSibling, _el$10 = _el$9.nextSibling, _el$11 = _el$10.firstChild, _el$12 = _el$10.nextSibling, _el$13 = _el$12.firstChild, _el$14 = _el$12.nextSibling, _el$15 = _el$14.nextSibling, _el$16 = _el$15.firstChild, _el$17 = _el$15.nextSibling, _el$18 = _el$17.firstChild, _el$19 = _el$17.nextSibling, _el$20 = _el$19.nextSibling, _el$21 = _el$20.firstChild, _el$22 = _el$20.nextSibling, _el$23 = _el$22.firstChild, _el$24 = _el$22.nextSibling, _el$25 = _el$24.nextSibling, _el$26 = _el$25.firstChild, _el$27 = _el$25.nextSibling, _el$28 = _el$27.firstChild, _el$29 = _el$27.nextSibling, _el$30 = _el$29.nextSibling, _el$31 = _el$30.firstChild, _el$32 = _el$30.nextSibling, _el$33 = _el$32.firstChild, _el$34 = _el$32.nextSibling, _el$35 = _el$34.nextSibling, _el$36 = _el$35.firstChild, _el$37 = _el$35.nextSibling, _el$38 = _el$37.firstChild, _el$39 = _el$37.nextSibling, _el$40 = _el$39.firstChild, _el$41 = _el$40.nextSibling, _el$42 = _el$41.nextSibling, _el$43 = _el$39.nextSibling, _el$44 = _el$43.firstChild, _el$45 = _el$43.nextSibling, _el$46 = _el$45.firstChild, _el$47 = _el$45.nextSibling, _el$48 = _el$47.firstChild, _el$49 = _el$48.nextSibling, _el$50 = _el$49.nextSibling, _el$51 = _el$50.nextSibling, _el$52 = _el$51.nextSibling, _el$53 = _el$52.nextSibling, _el$54 = _el$53.nextSibling, _el$55 = _el$54.nextSibling, _el$56 = _el$55.nextSibling, _el$57 = _el$56.nextSibling, _el$58 = _el$57.nextSibling, _el$59 = _el$58.nextSibling, _el$60 = _el$59.nextSibling, _el$61 = _el$60.nextSibling, _el$62 = _el$47.nextSibling, _el$63 = _el$62.firstChild, _el$64 = _el$62.nextSibling, _el$65 = _el$64.firstChild, _el$66 = _el$64.nextSibling, _el$67 = _el$66.nextSibling, _el$68 = _el$67.nextSibling, _el$69 = _el$68.firstChild, _el$70 = _el$68.nextSibling, _el$71 = _el$70.firstChild, _el$72 = _el$70.nextSibling, _el$73 = _el$72.firstChild, _el$74 = _el$73.firstChild, _el$75 = _el$74.nextSibling, _el$76 = _el$75.nextSibling, _el$77 = _el$76.nextSibling, _el$78 = _el$77.nextSibling, _el$79 = _el$78.nextSibling, _el$80 = _el$79.nextSibling, _el$81 = _el$80.nextSibling, _el$82 = _el$81.nextSibling, _el$83 = _el$82.nextSibling, _el$84 = _el$83.nextSibling, _el$85 = _el$84.nextSibling, _el$86 = _el$85.nextSibling, _el$87 = _el$86.nextSibling, _el$88 = _el$87.nextSibling, _el$89 = _el$88.nextSibling, _el$90 = _el$89.nextSibling, _el$91 = _el$90.nextSibling;
    setAttribute(_el$3, "id", `a-${id}`);
    setAttribute(_el$4, "fill", `url(#a-${id})`);
    setAttribute(_el$6, "id", `b-${id}`);
    setAttribute(_el$7, "id", `c-${id}`);
    setAttribute(_el$8, "filter", `url(#b-${id})`);
    setAttribute(_el$9, "mask", `url(#c-${id})`);
    setAttribute(_el$11, "id", `d-${id}`);
    setAttribute(_el$12, "id", `e-${id}`);
    setAttribute(_el$13, "filter", `url(#d-${id})`);
    setAttribute(_el$14, "mask", `url(#e-${id})`);
    setAttribute(_el$16, "id", `f-${id}`);
    setAttribute(_el$17, "id", `g-${id}`);
    setAttribute(_el$18, "filter", `url(#f-${id})`);
    setAttribute(_el$19, "mask", `url(#g-${id})`);
    setAttribute(_el$21, "id", `h-${id}`);
    setAttribute(_el$22, "id", `i-${id}`);
    setAttribute(_el$23, "filter", `url(#h-${id})`);
    setAttribute(_el$24, "mask", `url(#i-${id})`);
    setAttribute(_el$26, "id", `j-${id}`);
    setAttribute(_el$27, "id", `k-${id}`);
    setAttribute(_el$28, "filter", `url(#j-${id})`);
    setAttribute(_el$29, "mask", `url(#k-${id})`);
    setAttribute(_el$31, "id", `l-${id}`);
    setAttribute(_el$32, "id", `m-${id}`);
    setAttribute(_el$33, "filter", `url(#l-${id})`);
    setAttribute(_el$34, "mask", `url(#m-${id})`);
    setAttribute(_el$36, "id", `n-${id}`);
    setAttribute(_el$37, "id", `o-${id}`);
    setAttribute(_el$38, "filter", `url(#n-${id})`);
    setAttribute(_el$39, "mask", `url(#o-${id})`);
    setAttribute(_el$41, "id", `p-${id}`);
    setAttribute(_el$42, "fill", `url(#p-${id})`);
    setAttribute(_el$44, "id", `q-${id}`);
    setAttribute(_el$45, "id", `r-${id}`);
    setAttribute(_el$46, "filter", `url(#q-${id})`);
    setAttribute(_el$47, "mask", `url(#r-${id})`);
    setAttribute(_el$48, "id", `s-${id}`);
    setAttribute(_el$49, "fill", `url(#s-${id})`);
    setAttribute(_el$50, "id", `t-${id}`);
    setAttribute(_el$51, "fill", `url(#t-${id})`);
    setAttribute(_el$52, "id", `u-${id}`);
    setAttribute(_el$53, "fill", `url(#u-${id})`);
    setAttribute(_el$54, "id", `v-${id}`);
    setAttribute(_el$55, "fill", `url(#v-${id})`);
    setAttribute(_el$56, "id", `w-${id}`);
    setAttribute(_el$57, "fill", `url(#w-${id})`);
    setAttribute(_el$58, "id", `x-${id}`);
    setAttribute(_el$59, "fill", `url(#x-${id})`);
    setAttribute(_el$60, "id", `y-${id}`);
    setAttribute(_el$61, "fill", `url(#y-${id})`);
    setAttribute(_el$63, "id", `z-${id}`);
    setAttribute(_el$64, "id", `A-${id}`);
    setAttribute(_el$65, "filter", `url(#z-${id})`);
    setAttribute(_el$66, "id", `B-${id}`);
    setAttribute(_el$67, "fill", `url(#B-${id})`);
    setAttribute(_el$67, "mask", `url(#A-${id})`);
    setAttribute(_el$69, "id", `C-${id}`);
    setAttribute(_el$70, "id", `D-${id}`);
    setAttribute(_el$71, "filter", `url(#C-${id})`);
    setAttribute(_el$72, "mask", `url(#D-${id})`);
    setAttribute(_el$74, "id", `E-${id}`);
    setAttribute(_el$75, "fill", `url(#E-${id})`);
    setAttribute(_el$76, "id", `F-${id}`);
    setAttribute(_el$77, "stroke", `url(#F-${id})`);
    setAttribute(_el$78, "id", `G-${id}`);
    setAttribute(_el$79, "stroke", `url(#G-${id})`);
    setAttribute(_el$80, "id", `H-${id}`);
    setAttribute(_el$81, "stroke", `url(#H-${id})`);
    setAttribute(_el$82, "id", `I-${id}`);
    setAttribute(_el$83, "stroke", `url(#I-${id})`);
    setAttribute(_el$84, "id", `J-${id}`);
    setAttribute(_el$85, "stroke", `url(#J-${id})`);
    setAttribute(_el$86, "id", `K-${id}`);
    setAttribute(_el$87, "stroke", `url(#K-${id})`);
    setAttribute(_el$88, "id", `L-${id}`);
    setAttribute(_el$89, "stroke", `url(#L-${id})`);
    setAttribute(_el$90, "id", `M-${id}`);
    setAttribute(_el$91, "stroke", `url(#M-${id})`);
    createRenderEffect(() => setAttribute(_el$, "class", styles().logo));
    return _el$;
  })();
}

// node_modules/@tanstack/devtools/dist/esm/styles/tokens.js
var tokens2 = {
  colors: {
    darkGray: {
      700: "#191c24",
      800: "#111318"
    },
    gray: {
      100: "#f2f4f7",
      300: "#d0d5dd",
      400: "#98a2b3",
      700: "#344054"
    },
    blue: {
      800: "#1849A9"
    },
    red: {
      500: "#ef4444"
    },
    purple: {
      400: "#9B8AFB",
      500: "#7A5AF8"
    }
  },
  alpha: {
    90: "e5"
  },
  font: {
    size: {
      xs: "calc(var(--tsrd-font-size) * 0.75)",
      sm: "calc(var(--tsrd-font-size) * 0.875)"
    },
    fontFamily: {
      sans: "ui-sans-serif, Inter, system-ui, sans-serif, sans-serif"
    }
  },
  border: {
    radius: {
      full: "9999px"
    }
  },
  size: {
    2: "calc(var(--tsrd-font-size) * 0.5)",
    10: "calc(var(--tsrd-font-size) * 2.5)",
    48: "calc(var(--tsrd-font-size) * 12)"
  }
};

// node_modules/@tanstack/devtools/dist/esm/styles/use-styles.js
var stylesFactory2 = () => {
  const { colors, font, size, alpha, border } = tokens2;
  const { fontFamily, size: fontSize } = font;
  const css = u;
  return {
    devtoolsPanelContainer: (panelLocation) => css`
      direction: ltr;
      position: fixed;
      overflow-y: hidden;
      overflow-x: hidden;
      ${panelLocation}: 0;
      right: 0;
      z-index: 99999;
      width: 100%;

      max-height: 90%;
      border-top: 1px solid ${colors.gray[700]};
      transform-origin: top;
    `,
    devtoolsPanelContainerVisibility: (isOpen) => {
      return css`
        visibility: ${isOpen ? "visible" : "hidden"};
        height: ${isOpen ? "auto" : "0"};
      `;
    },
    devtoolsPanelContainerResizing: (isResizing) => {
      if (isResizing()) {
        return css`
          transition: none;
        `;
      }
      return css`
        transition: all 0.4s ease;
      `;
    },
    devtoolsPanelContainerAnimation: (isOpen, height) => {
      if (isOpen) {
        return css`
          pointer-events: auto;
          transform: translateY(0);
        `;
      }
      return css`
        pointer-events: none;
        transform: translateY(${height}px);
      `;
    },
    devtoolsPanel: css`
      display: flex;
      font-size: ${fontSize.sm};
      font-family: ${fontFamily.sans};
      background-color: ${colors.darkGray[700]};
      color: ${colors.gray[300]};
      width: w-screen;
      flex-direction: row;
      overflow-x: hidden;
      overflow-y: hidden;
      height: 100%;
    `,
    dragHandle: (panelLocation) => css`
      position: absolute;
      left: 0;
      ${panelLocation === "bottom" ? "top" : "bottom"}: 0;
      width: 100%;
      height: 4px;
      cursor: row-resize;
      user-select: none;
      z-index: 100000;
      &:hover {
        background-color: ${colors.purple[400]}${alpha[90]};
      }
    `,
    mainCloseBtn: css`
      background: transparent;
      position: fixed;
      z-index: 99999;
      display: inline-flex;
      width: fit-content;
      cursor: pointer;
      appearance: none;
      border: 0;
      align-items: center;
      padding: 0;
      font-size: ${font.size.xs};
      cursor: pointer;
      transition: all 0.25s ease-out;
      &:hide-until-hover {
        opacity: 0;
        pointer-events: none;
        visibility: hidden;
      }
      &:hide-until-hover:hover {
        opacity: 1;
        pointer-events: auto;
        visibility: visible;
      }
      &:focus-visible {
        outline-offset: 2px;
        border-radius: ${border.radius.full};
        outline: 2px solid ${colors.blue[800]};
      }
    `,
    mainCloseBtnPosition: (position) => {
      const base = css`
        ${position === "top-left" ? `top: ${size[2]}; left: ${size[2]};` : ""}
        ${position === "top-right" ? `top: ${size[2]}; right: ${size[2]};` : ""}
        ${position === "middle-left" ? `top: 50%; left: ${size[2]}; transform: translateY(-50%);` : ""}
        ${position === "middle-right" ? `top: 50%; right: ${size[2]}; transform: translateY(-50%);` : ""}
        ${position === "bottom-left" ? `bottom: ${size[2]}; left: ${size[2]};` : ""}
        ${position === "bottom-right" ? `bottom: ${size[2]}; right: ${size[2]};` : ""}
      `;
      return base;
    },
    mainCloseBtnAnimation: (isOpen, hideUntilHover) => {
      if (!isOpen) {
        return hideUntilHover ? css`
              opacity: 0;

              &:hover {
                opacity: 1;
                pointer-events: auto;
                visibility: visible;
              }
            ` : css`
              opacity: 1;
              pointer-events: auto;
              visibility: visible;
            `;
      }
      return css`
        opacity: 0;
        pointer-events: none;
        visibility: hidden;
      `;
    },
    tabContainer: css`
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: flex-start;
      height: 100%;
      background-color: ${colors.darkGray[800]};
      border-right: 1px solid ${colors.gray[700]};
      box-shadow: 0 1px 0 ${colors.gray[700]};
      position: relative;
      width: ${size[10]};
    `,
    tab: css`
      display: flex;
      align-items: center;
      justify-content: center;
      width: 100%;
      height: ${size[10]};
      cursor: pointer;
      font-size: ${fontSize.sm};
      font-family: ${fontFamily.sans};
      color: ${colors.gray[300]};
      background-color: transparent;
      border: none;
      transition: all 0.2s ease-in-out;
      border-left: 2px solid transparent;
      &:hover:not(.close):not(.active) {
        background-color: ${colors.gray[700]};
        color: ${colors.gray[100]};
        border-left: 2px solid ${colors.purple[500]};
      }
      &.active {
        background-color: ${colors.purple[500]};
        color: ${colors.gray[100]};
        border-left: 2px solid ${colors.purple[500]};
      }
      &.close {
        margin-top: auto;
        &:hover {
          background-color: ${colors.gray[700]};
        }
        &:hover {
          color: ${colors.red[500]};
        }
      }

      &.disabled {
        cursor: not-allowed;
        opacity: 0.2;
        pointer-events: none;
      }
      &.disabled:hover {
        background-color: transparent;
        color: ${colors.gray[300]};
      }
    `,
    tabContent: css`
      transition: all 0.2s ease-in-out;
      width: 100%;
      height: 100%;
    `,
    pluginsTabPanel: css`
      display: flex;
      flex-direction: row;
      width: 100%;
      height: 100%;
      overflow: hidden;
    `,
    pluginsTabSidebar: css`
      width: ${size[48]};
      background-color: ${colors.darkGray[800]};
      border-right: 1px solid ${colors.gray[700]};
      box-shadow: 0 1px 0 ${colors.gray[700]};
      overflow-y: auto;
    `,
    pluginName: css`
      font-size: ${fontSize.xs};
      font-family: ${fontFamily.sans};
      color: ${colors.gray[300]};
      padding: ${size[2]};
      cursor: pointer;
      text-align: center;
      transition: all 0.2s ease-in-out;
      &:hover {
        background-color: ${colors.gray[700]};
        color: ${colors.gray[100]};
        padding: ${size[2]};
      }
      &.active {
        background-color: ${colors.purple[500]};
        color: ${colors.gray[100]};
      }
    `,
    pluginsTabContent: css`
      width: 100%;
      height: 100%;
      overflow-y: auto;
    `,
    settingsContainer: css`
      padding: 1.5rem;
      height: 100%;
      overflow-y: auto;
      background-color: ${colors.darkGray[700]};
    `,
    settingsSection: css`
      margin-bottom: 2rem;
      padding: 1.5rem;
      background-color: ${colors.darkGray[800]};
      border: 1px solid ${colors.gray[700]};
      border-radius: 0.75rem;
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    `,
    sectionTitle: css`
      font-size: 1.125rem;
      font-weight: 600;
      color: ${colors.gray[100]};
      margin: 0 0 1rem 0;
      padding-bottom: 0.5rem;
      border-bottom: 1px solid ${colors.gray[700]};
      display: flex;
      align-items: center;
      gap: 0.5rem;
    `,
    sectionIcon: css`
      color: ${colors.purple[400]};
    `,
    sectionDescription: css`
      color: ${colors.gray[400]};
      font-size: 0.875rem;
      margin: 0 0 1.5rem 0;
      line-height: 1.5;
    `,
    settingsGroup: css`
      display: flex;
      flex-direction: column;
      gap: 1rem;
    `,
    conditionalSetting: css`
      margin-left: 1.5rem;
      padding-left: 1rem;
      border-left: 2px solid ${colors.purple[400]};
      background-color: ${colors.darkGray[800]};
      padding: 1rem;
      border-radius: 0.5rem;
      margin-top: 0.5rem;
    `,
    settingRow: css`
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 1rem;

      @media (max-width: 768px) {
        grid-template-columns: 1fr;
      }
    `
  };
};
function useStyles2() {
  const [_styles] = createSignal(stylesFactory2());
  return _styles;
}

// node_modules/@tanstack/devtools/dist/esm/components/trigger.js
var _tmpl$6 = template(`<button type=button aria-label="Open TanStack Devtools">`);
var Trigger = ({
  isOpen,
  setIsOpen
}) => {
  const {
    settings
  } = useDevtoolsSettings();
  const styles = useStyles2();
  const buttonStyle = createMemo(() => {
    return clsx_default(styles().mainCloseBtn, styles().mainCloseBtnPosition(settings().position), styles().mainCloseBtnAnimation(isOpen(), settings().hideUntilHover));
  });
  return (() => {
    var _el$ = _tmpl$6();
    _el$.$$click = () => setIsOpen(!isOpen());
    insert(_el$, createComponent(TanStackLogo, {}));
    createRenderEffect(() => className(_el$, buttonStyle()));
    return _el$;
  })();
};
delegateEvents(["click"]);

// node_modules/@tanstack/devtools/dist/esm/components/main-panel.js
var _tmpl$7 = template(`<div>`);
var MainPanel = (props) => {
  const styles = useStyles2();
  const {
    height
  } = useHeight();
  const {
    settings
  } = useDevtoolsSettings();
  return (() => {
    var _el$ = _tmpl$7();
    setAttribute(_el$, "id", TANSTACK_DEVTOOLS);
    insert(_el$, () => props.children);
    createRenderEffect((_p$) => {
      var _v$ = height() + "px", _v$2 = clsx_default(styles().devtoolsPanelContainer(settings().panelLocation), styles().devtoolsPanelContainerAnimation(props.isOpen(), height()), styles().devtoolsPanelContainerVisibility(props.isOpen()), styles().devtoolsPanelContainerResizing(props.isResizing));
      _v$ !== _p$.e && ((_p$.e = _v$) != null ? _el$.style.setProperty("height", _v$) : _el$.style.removeProperty("height"));
      _v$2 !== _p$.t && className(_el$, _p$.t = _v$2);
      return _p$;
    }, {
      e: void 0,
      t: void 0
    });
    return _el$;
  })();
};

// node_modules/@tanstack/devtools/dist/esm/components/content-panel.js
var _tmpl$8 = template(`<div>`);
var ContentPanel = (props) => {
  const styles = useStyles2();
  const {
    settings
  } = useDevtoolsSettings();
  return (() => {
    var _el$ = _tmpl$8();
    var _ref$ = props.ref;
    typeof _ref$ === "function" ? use(_ref$, _el$) : props.ref = _el$;
    insert(_el$, (() => {
      var _c$ = memo(() => !!props.handleDragStart);
      return () => _c$() ? (() => {
        var _el$2 = _tmpl$8();
        addEventListener(_el$2, "mousedown", props.handleDragStart, true);
        createRenderEffect(() => className(_el$2, styles().dragHandle(settings().panelLocation)));
        return _el$2;
      })() : null;
    })(), null);
    insert(_el$, () => props.children, null);
    createRenderEffect(() => className(_el$, styles().devtoolsPanel));
    return _el$;
  })();
};
delegateEvents(["mousedown"]);

// node_modules/@tanstack/devtools/dist/esm/tabs/settings-tab.js
var _tmpl$9 = template(`<div>`);
var _tmpl$24 = template(`<div><div><h3><svg xmlns=http://www.w3.org/2000/svg width=20 height=20 viewBox="0 0 24 24"fill=none stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round><path d="M9.671 4.136a2.34 2.34 0 0 1 4.659 0 2.34 2.34 0 0 0 3.319 1.915 2.34 2.34 0 0 1 2.33 4.033 2.34 2.34 0 0 0 0 3.831 2.34 2.34 0 0 1-2.33 4.033 2.34 2.34 0 0 0-3.319 1.915 2.34 2.34 0 0 1-4.659 0 2.34 2.34 0 0 0-3.32-1.915 2.34 2.34 0 0 1-2.33-4.033 2.34 2.34 0 0 0 0-3.831A2.34 2.34 0 0 1 6.35 6.051a2.34 2.34 0 0 0 3.319-1.915"></path><circle cx=12 cy=12 r=3></circle></svg>General</h3><p>Configure general behavior of the devtools panel.</p><div></div></div><div><h3><svg xmlns=http://www.w3.org/2000/svg width=20 height=20 viewBox="0 0 24 24"fill=none stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round><path d="M9 17H7A5 5 0 0 1 7 7h2"></path><path d="M15 7h2a5 5 0 1 1 0 10h-2"></path><line x1=8 x2=16 y1=12 y2=12></line></svg>URL Configuration</h3><p>Control when devtools are available based on URL parameters.</p><div></div></div><div><h3><svg xmlns=http://www.w3.org/2000/svg width=20 height=20 viewBox="0 0 24 24"fill=none stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round><path d="M10 8h.01"></path><path d="M12 12h.01"></path><path d="M14 8h.01"></path><path d="M16 12h.01"></path><path d="M18 8h.01"></path><path d="M6 8h.01"></path><path d="M7 16h10"></path><path d="M8 12h.01"></path><rect width=20 height=16 x=2 y=4 rx=2></rect></svg>Keyboard</h3><p>Customize keyboard shortcuts for quick access.</p><div></div></div><div><h3><svg xmlns=http://www.w3.org/2000/svg width=20 height=20 viewBox="0 0 24 24"fill=none stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round><path d="M20 10c0 4.993-5.539 10.193-7.399 11.799a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 16 0"></path><circle cx=12 cy=10 r=3></circle></svg>Position</h3><p>Adjust the position of the trigger button and devtools panel.</p><div><div>`);
var SettingsTab = () => {
  const {
    setSettings,
    settings
  } = useDevtoolsSettings();
  const styles = useStyles2();
  return (() => {
    var _el$ = _tmpl$24(), _el$2 = _el$.firstChild, _el$3 = _el$2.firstChild, _el$4 = _el$3.firstChild, _el$5 = _el$3.nextSibling, _el$6 = _el$5.nextSibling, _el$7 = _el$2.nextSibling, _el$8 = _el$7.firstChild, _el$9 = _el$8.firstChild, _el$10 = _el$8.nextSibling, _el$11 = _el$10.nextSibling, _el$13 = _el$7.nextSibling, _el$14 = _el$13.firstChild, _el$15 = _el$14.firstChild, _el$16 = _el$14.nextSibling, _el$17 = _el$16.nextSibling, _el$18 = _el$13.nextSibling, _el$19 = _el$18.firstChild, _el$20 = _el$19.firstChild, _el$21 = _el$19.nextSibling, _el$22 = _el$21.nextSibling, _el$23 = _el$22.firstChild;
    insert(_el$6, createComponent(Checkbox, {
      label: "Default open",
      description: "Automatically open the devtools panel when the page loads",
      onChange: () => setSettings({
        defaultOpen: !settings().defaultOpen
      }),
      get checked() {
        return settings().defaultOpen;
      }
    }), null);
    insert(_el$6, createComponent(Checkbox, {
      label: "Hide trigger until hovered",
      description: "Keep the devtools trigger button hidden until you hover over its area",
      onChange: () => setSettings({
        hideUntilHover: !settings().hideUntilHover
      }),
      get checked() {
        return settings().hideUntilHover;
      }
    }), null);
    insert(_el$11, createComponent(Checkbox, {
      label: "Require URL Flag",
      description: "Only show devtools when a specific URL parameter is present",
      get checked() {
        return settings().requireUrlFlag;
      },
      onChange: (checked) => setSettings({
        requireUrlFlag: checked
      })
    }), null);
    insert(_el$11, createComponent(Show, {
      get when() {
        return settings().requireUrlFlag;
      },
      get children() {
        var _el$12 = _tmpl$9();
        insert(_el$12, createComponent(Input, {
          label: "URL flag",
          description: "Enter the URL parameter name (e.g., 'debug' for ?debug=true)",
          placeholder: "debug",
          get value() {
            return settings().urlFlag;
          },
          onChange: (e2) => setSettings({
            urlFlag: e2
          })
        }));
        createRenderEffect(() => className(_el$12, styles().conditionalSetting));
        return _el$12;
      }
    }), null);
    insert(_el$17, createComponent(Input, {
      label: "Hotkey to open/close devtools",
      description: "Use '+' to combine keys (e.g., 'Ctrl+Shift+D' or 'Alt+D')",
      placeholder: "Ctrl+Shift+D",
      get value() {
        return settings().openHotkey.join("+");
      },
      onChange: (e2) => setSettings({
        openHotkey: e2.split("+").map((key) => uppercaseFirstLetter(key)).filter(Boolean)
      })
    }));
    insert(_el$23, createComponent(Select, {
      label: "Trigger Position",
      options: [{
        label: "Bottom Right",
        value: "bottom-right"
      }, {
        label: "Bottom Left",
        value: "bottom-left"
      }, {
        label: "Top Right",
        value: "top-right"
      }, {
        label: "Top Left",
        value: "top-left"
      }, {
        label: "Middle Right",
        value: "middle-right"
      }, {
        label: "Middle Left",
        value: "middle-left"
      }],
      get value() {
        return settings().position;
      },
      onChange: (value) => setSettings({
        position: value
      })
    }), null);
    insert(_el$23, createComponent(Select, {
      label: "Panel Position",
      get value() {
        return settings().panelLocation;
      },
      options: [{
        label: "Top",
        value: "top"
      }, {
        label: "Bottom",
        value: "bottom"
      }],
      onChange: (value) => setSettings({
        panelLocation: value
      })
    }), null);
    createRenderEffect((_p$) => {
      var _v$ = styles().settingsContainer, _v$2 = styles().settingsSection, _v$3 = styles().sectionTitle, _v$4 = styles().sectionIcon, _v$5 = styles().sectionDescription, _v$6 = styles().settingsGroup, _v$7 = styles().settingsSection, _v$8 = styles().sectionTitle, _v$9 = styles().sectionIcon, _v$10 = styles().sectionDescription, _v$11 = styles().settingsGroup, _v$12 = styles().settingsSection, _v$13 = styles().sectionTitle, _v$14 = styles().sectionIcon, _v$15 = styles().sectionDescription, _v$16 = styles().settingsGroup, _v$17 = styles().settingsSection, _v$18 = styles().sectionTitle, _v$19 = styles().sectionIcon, _v$20 = styles().sectionDescription, _v$21 = styles().settingsGroup, _v$22 = styles().settingRow;
      _v$ !== _p$.e && className(_el$, _p$.e = _v$);
      _v$2 !== _p$.t && className(_el$2, _p$.t = _v$2);
      _v$3 !== _p$.a && className(_el$3, _p$.a = _v$3);
      _v$4 !== _p$.o && setAttribute(_el$4, "class", _p$.o = _v$4);
      _v$5 !== _p$.i && className(_el$5, _p$.i = _v$5);
      _v$6 !== _p$.n && className(_el$6, _p$.n = _v$6);
      _v$7 !== _p$.s && className(_el$7, _p$.s = _v$7);
      _v$8 !== _p$.h && className(_el$8, _p$.h = _v$8);
      _v$9 !== _p$.r && setAttribute(_el$9, "class", _p$.r = _v$9);
      _v$10 !== _p$.d && className(_el$10, _p$.d = _v$10);
      _v$11 !== _p$.l && className(_el$11, _p$.l = _v$11);
      _v$12 !== _p$.u && className(_el$13, _p$.u = _v$12);
      _v$13 !== _p$.c && className(_el$14, _p$.c = _v$13);
      _v$14 !== _p$.w && setAttribute(_el$15, "class", _p$.w = _v$14);
      _v$15 !== _p$.m && className(_el$16, _p$.m = _v$15);
      _v$16 !== _p$.f && className(_el$17, _p$.f = _v$16);
      _v$17 !== _p$.y && className(_el$18, _p$.y = _v$17);
      _v$18 !== _p$.g && className(_el$19, _p$.g = _v$18);
      _v$19 !== _p$.p && setAttribute(_el$20, "class", _p$.p = _v$19);
      _v$20 !== _p$.b && className(_el$21, _p$.b = _v$20);
      _v$21 !== _p$.T && className(_el$22, _p$.T = _v$21);
      _v$22 !== _p$.A && className(_el$23, _p$.A = _v$22);
      return _p$;
    }, {
      e: void 0,
      t: void 0,
      a: void 0,
      o: void 0,
      i: void 0,
      n: void 0,
      s: void 0,
      h: void 0,
      r: void 0,
      d: void 0,
      l: void 0,
      u: void 0,
      c: void 0,
      w: void 0,
      m: void 0,
      f: void 0,
      y: void 0,
      g: void 0,
      p: void 0,
      b: void 0,
      T: void 0,
      A: void 0
    });
    return _el$;
  })();
};

// node_modules/@tanstack/devtools/dist/esm/tabs/plugins-tab.js
var _tmpl$10 = template(`<div><div></div><div>`);
var _tmpl$25 = template(`<div><h3>`);
var PluginsTab = () => {
  const {
    plugins,
    activePlugin,
    setActivePlugin
  } = usePlugins();
  let activePluginRef;
  createEffect(() => {
    var _a;
    const currentActivePlugin = (_a = plugins()) == null ? void 0 : _a.find((plugin) => plugin.id === activePlugin());
    if (activePluginRef && currentActivePlugin) {
      currentActivePlugin.render(activePluginRef);
    }
  });
  const styles = useStyles2();
  return (() => {
    var _el$ = _tmpl$10(), _el$2 = _el$.firstChild, _el$3 = _el$2.nextSibling;
    insert(_el$2, createComponent(For, {
      get each() {
        return plugins();
      },
      children: (plugin) => {
        let pluginHeading;
        createEffect(() => {
          if (pluginHeading) {
            typeof plugin.name === "string" ? pluginHeading.textContent = plugin.name : plugin.name(pluginHeading);
          }
        });
        return (() => {
          var _el$4 = _tmpl$25(), _el$5 = _el$4.firstChild;
          _el$4.$$click = () => setActivePlugin(plugin.id);
          var _ref$2 = pluginHeading;
          typeof _ref$2 === "function" ? use(_ref$2, _el$5) : pluginHeading = _el$5;
          setAttribute(_el$5, "id", PLUGIN_TITLE_CONTAINER_ID);
          createRenderEffect(() => className(_el$4, clsx_default(styles().pluginName, {
            active: activePlugin() === plugin.id
          })));
          return _el$4;
        })();
      }
    }));
    var _ref$ = activePluginRef;
    typeof _ref$ === "function" ? use(_ref$, _el$3) : activePluginRef = _el$3;
    setAttribute(_el$3, "id", PLUGIN_CONTAINER_ID);
    createRenderEffect((_p$) => {
      var _v$ = styles().pluginsTabPanel, _v$2 = styles().pluginsTabSidebar, _v$3 = styles().pluginsTabContent;
      _v$ !== _p$.e && className(_el$, _p$.e = _v$);
      _v$2 !== _p$.t && className(_el$2, _p$.t = _v$2);
      _v$3 !== _p$.a && className(_el$3, _p$.a = _v$3);
      return _p$;
    }, {
      e: void 0,
      t: void 0,
      a: void 0
    });
    return _el$;
  })();
};
delegateEvents(["click"]);

// node_modules/@tanstack/devtools/dist/esm/tabs/index.js
var _tmpl$11 = template(`<svg xmlns=http://www.w3.org/2000/svg width=24 height=24 viewBox="0 0 24 24"fill=none stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round><path d="M8 6h10"></path><path d="M6 12h9"></path><path d="M11 18h7">`);
var _tmpl$26 = template(`<svg xmlns=http://www.w3.org/2000/svg width=24 height=24 viewBox="0 0 24 24"fill=none stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round><path d="M12 20a8 8 0 1 0 0-16 8 8 0 0 0 0 16Z"></path><path d="M12 14a2 2 0 1 0 0-4 2 2 0 0 0 0 4Z"></path><path d="M12 2v2"></path><path d="M12 22v-2"></path><path d="m17 20.66-1-1.73"></path><path d="M11 10.27 7 3.34"></path><path d="m20.66 17-1.73-1"></path><path d="m3.34 7 1.73 1"></path><path d="M14 12h8"></path><path d="M2 12h2"></path><path d="m20.66 7-1.73 1"></path><path d="m3.34 17 1.73-1"></path><path d="m17 3.34-1 1.73"></path><path d="m11 13.73-4 6.93">`);
var tabs = [{
  name: "Plugins",
  id: "plugins",
  component: () => createComponent(PluginsTab, {}),
  icon: _tmpl$11()
}, {
  name: "Settings",
  id: "settings",
  component: () => createComponent(SettingsTab, {}),
  icon: _tmpl$26()
}];

// node_modules/@tanstack/devtools/dist/esm/components/tabs.js
var _tmpl$12 = template(`<div><button type=button><svg xmlns=http://www.w3.org/2000/svg width=24 height=24 viewBox="0 0 24 24"fill=none stroke=currentColor stroke-width=2 stroke-linecap=round stroke-linejoin=round><path d="M18 6 6 18"></path><path d="m6 6 12 12">`);
var _tmpl$27 = template(`<button type=button>`);
var Tabs = (props) => {
  const styles = useStyles2();
  const {
    state,
    setState
  } = useDevtoolsState();
  return (() => {
    var _el$ = _tmpl$12(), _el$2 = _el$.firstChild;
    insert(_el$, createComponent(For, {
      each: tabs,
      children: (tab) => (() => {
        var _el$3 = _tmpl$27();
        _el$3.$$click = () => setState({
          activeTab: tab.id
        });
        insert(_el$3, () => tab.icon);
        createRenderEffect(() => className(_el$3, clsx_default(styles().tab, {
          active: state().activeTab === tab.id
        })));
        return _el$3;
      })()
    }), _el$2);
    _el$2.$$click = () => props.toggleOpen();
    createRenderEffect((_p$) => {
      var _v$ = styles().tabContainer, _v$2 = clsx_default(styles().tab, "close");
      _v$ !== _p$.e && className(_el$, _p$.e = _v$);
      _v$2 !== _p$.t && className(_el$2, _p$.t = _v$2);
      return _p$;
    }, {
      e: void 0,
      t: void 0
    });
    return _el$;
  })();
};
delegateEvents(["click"]);

// node_modules/@tanstack/devtools/dist/esm/components/tab-content.js
var _tmpl$13 = template(`<div>`);
var TabContent = () => {
  var _a;
  const {
    state
  } = useDevtoolsState();
  const styles = useStyles2();
  const [component, setComponent] = createSignal(((_a = tabs.find((t2) => t2.id === state().activeTab)) == null ? void 0 : _a.component()) || null);
  createEffect(() => {
    var _a2;
    setComponent(((_a2 = tabs.find((t2) => t2.id === state().activeTab)) == null ? void 0 : _a2.component()) || null);
  });
  return (() => {
    var _el$ = _tmpl$13();
    insert(_el$, component);
    createRenderEffect(() => className(_el$, styles().tabContent));
    return _el$;
  })();
};

// node_modules/@tanstack/devtools/dist/esm/devtools.js
var _tmpl$14 = template(`<div>`);
function DevTools() {
  const {
    settings
  } = useDevtoolsSettings();
  const {
    setHeight
  } = useHeight();
  const {
    persistOpen,
    setPersistOpen
  } = usePersistOpen();
  const [rootEl, setRootEl] = createSignal();
  const [isOpen, setIsOpen] = createSignal(settings().defaultOpen || persistOpen());
  let panelRef = void 0;
  const [isResizing, setIsResizing] = createSignal(false);
  const toggleOpen = () => {
    const open = isOpen();
    setIsOpen(!open);
    setPersistOpen(!open);
  };
  createEffect(() => {
  });
  const handleDragStart = (panelElement, startEvent) => {
    if (startEvent.button !== 0) return;
    if (!panelElement) return;
    setIsResizing(true);
    const dragInfo = {
      originalHeight: panelElement.getBoundingClientRect().height,
      pageY: startEvent.pageY
    };
    const run = (moveEvent) => {
      const delta = dragInfo.pageY - moveEvent.pageY;
      const newHeight = settings().panelLocation === "bottom" ? dragInfo.originalHeight + delta : dragInfo.originalHeight - delta;
      setHeight(newHeight);
      if (newHeight < 70) {
        setIsOpen(false);
      } else {
        setIsOpen(true);
      }
    };
    const unsub = () => {
      setIsResizing(false);
      document.removeEventListener("mousemove", run);
      document.removeEventListener("mouseUp", unsub);
    };
    document.addEventListener("mousemove", run);
    document.addEventListener("mouseup", unsub);
  };
  createEffect(() => {
    var _a, _b, _c;
    if (isOpen()) {
      const previousValue = (_b = (_a = rootEl()) == null ? void 0 : _a.parentElement) == null ? void 0 : _b.style.paddingBottom;
      const run = () => {
        var _a2;
        if (!panelRef) return;
        const containerHeight = panelRef.getBoundingClientRect().height;
        if ((_a2 = rootEl()) == null ? void 0 : _a2.parentElement) {
          setRootEl((prev) => {
            if (prev == null ? void 0 : prev.parentElement) {
              prev.parentElement.style.paddingBottom = `${containerHeight}px`;
            }
            return prev;
          });
        }
      };
      run();
      if (typeof window !== "undefined") {
        window.addEventListener("resize", run);
        return () => {
          var _a2;
          window.removeEventListener("resize", run);
          if (((_a2 = rootEl()) == null ? void 0 : _a2.parentElement) && typeof previousValue === "string") {
            setRootEl((prev) => {
              prev.parentElement.style.paddingBottom = previousValue;
              return prev;
            });
          }
        };
      }
    } else {
      if ((_c = rootEl()) == null ? void 0 : _c.parentElement) {
        setRootEl((prev) => {
          if (prev == null ? void 0 : prev.parentElement) {
            prev.parentElement.removeAttribute("style");
          }
          return prev;
        });
      }
    }
    return;
  });
  createEffect(() => {
    window.addEventListener("keydown", (e2) => {
      if (e2.key === "Escape" && isOpen()) {
        toggleOpen();
      }
    });
  });
  useDisableTabbing(isOpen);
  createEffect(() => {
    if (rootEl()) {
      const el = rootEl();
      const fontSize = getComputedStyle(el).fontSize;
      el == null ? void 0 : el.style.setProperty("--tsrd-font-size", fontSize);
    }
  });
  createEffect(() => {
    createShortcut(settings().openHotkey, () => {
      toggleOpen();
    });
  });
  createEffect(() => {
  });
  return (() => {
    var _el$ = _tmpl$14();
    use(setRootEl, _el$);
    setAttribute(_el$, "data-testid", TANSTACK_DEVTOOLS);
    insert(_el$, createComponent(Show, {
      get when() {
        return memo(() => !!settings().requireUrlFlag)() ? window.location.search.includes(settings().urlFlag) : true;
      },
      get children() {
        return [createComponent(Trigger, {
          isOpen,
          setIsOpen: toggleOpen
        }), createComponent(MainPanel, {
          isResizing,
          isOpen,
          get children() {
            return createComponent(ContentPanel, {
              ref: (ref) => panelRef = ref,
              handleDragStart: (e2) => handleDragStart(panelRef, e2),
              get children() {
                return [createComponent(Tabs, {
                  toggleOpen
                }), createComponent(TabContent, {})];
              }
            });
          }
        })];
      }
    }));
    return _el$;
  })();
}
export {
  DevTools as default
};
//# sourceMappingURL=devtools-VPVAU5EM.js.map
