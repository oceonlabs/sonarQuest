{"version":3,"file":"use-disable-tabbing.cjs","sources":["../../../src/hooks/use-disable-tabbing.ts"],"sourcesContent":["import { createEffect } from 'solid-js'\nimport { TANSTACK_DEVTOOLS } from '../utils/storage'\n\nconst recursivelyChangeTabIndex = (\n  node: Element | HTMLElement,\n  remove = true,\n) => {\n  if (remove) {\n    node.setAttribute('tabIndex', '-1')\n  } else {\n    node.removeAttribute('tabIndex')\n  }\n  for (const child of node.children) {\n    recursivelyChangeTabIndex(child, remove)\n  }\n}\n/**\n * @param isOpen A function that returns whether the devtools are open or not.\n * This is used to disable tabbing over the main devtools container while\n * the devtools are closed.\n */\nexport const useDisableTabbing = (isOpen: () => boolean) => {\n  createEffect(() => {\n    const el = document.getElementById(TANSTACK_DEVTOOLS)\n    if (!el) return\n    recursivelyChangeTabIndex(el, !isOpen())\n  })\n}\n"],"names":["createEffect","TANSTACK_DEVTOOLS"],"mappings":";;;;AAGA,MAAM,4BAA4B,CAChC,MACA,SAAS,SACN;AACH,MAAI,QAAQ;AACV,SAAK,aAAa,YAAY,IAAI;AAAA,EACpC,OAAO;AACL,SAAK,gBAAgB,UAAU;AAAA,EACjC;AACA,aAAW,SAAS,KAAK,UAAU;AACjC,8BAA0B,OAAO,MAAM;AAAA,EACzC;AACF;AAMO,MAAM,oBAAoB,CAAC,WAA0B;AAC1DA,UAAAA,aAAa,MAAM;AACjB,UAAM,KAAK,SAAS,eAAeC,yBAAiB;AACpD,QAAI,CAAC,GAAI;AACT,8BAA0B,IAAI,CAAC,QAAQ;AAAA,EACzC,CAAC;AACH;;"}