{"version":3,"file":"index.cjs","sources":["../../src/index.tsx"],"sourcesContent":["import { Fragment } from 'react'\nimport { QueryClientProvider } from '@tanstack/react-query'\nimport { setupCoreRouterSsrQueryIntegration } from '@tanstack/router-ssr-query-core'\nimport type { RouterSsrQueryOptions } from '@tanstack/router-ssr-query-core'\nimport type { AnyRouter } from '@tanstack/react-router'\n\nexport type Options<TRouter extends AnyRouter> =\n  RouterSsrQueryOptions<TRouter> & {\n    wrapQueryClient?: boolean\n  }\n\nexport function setupRouterSsrQueryIntegration<TRouter extends AnyRouter>(\n  opts: Options<TRouter>,\n) {\n  setupCoreRouterSsrQueryIntegration(opts)\n\n  if (opts.wrapQueryClient === false) {\n    return\n  }\n  const OGWrap = opts.router.options.Wrap || Fragment\n\n  opts.router.options.Wrap = ({ children }) => {\n    return (\n      <QueryClientProvider client={opts.queryClient}>\n        <OGWrap>{children}</OGWrap>\n      </QueryClientProvider>\n    )\n  }\n}\n"],"names":["setupCoreRouterSsrQueryIntegration","Fragment","jsx","QueryClientProvider"],"mappings":";;;;;;AAWO,SAAS,+BACd,MACA;AACAA,qBAAAA,mCAAmC,IAAI;AAEvC,MAAI,KAAK,oBAAoB,OAAO;AAClC;AAAA,EACF;AACA,QAAM,SAAS,KAAK,OAAO,QAAQ,QAAQC,MAAAA;AAE3C,OAAK,OAAO,QAAQ,OAAO,CAAC,EAAE,eAAe;AAC3C,WACEC,+BAACC,WAAAA,uBAAoB,QAAQ,KAAK,aAChC,UAAAD,2BAAAA,IAAC,QAAA,EAAQ,UAAS,EAAA,CACpB;AAAA,EAEJ;AACF;;"}