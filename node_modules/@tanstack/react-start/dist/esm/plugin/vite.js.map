{"version":3,"file":"vite.js","sources":["../../../src/plugin/vite.ts"],"sourcesContent":["import { fileURLToPath } from 'node:url'\nimport {\n  TanStackStartVitePluginCore,\n  VITE_ENVIRONMENT_NAMES,\n} from '@tanstack/start-plugin-core'\nimport path from 'pathe'\nimport type { TanStackStartInputConfig } from '@tanstack/start-plugin-core'\nimport type { PluginOption } from 'vite'\n\nconst currentDir = path.dirname(fileURLToPath(import.meta.url))\nconst defaultEntryDir = path.resolve(\n  currentDir,\n  '..',\n  '..',\n  'plugin',\n  'default-entry',\n)\nconst defaultEntryPaths = {\n  client: path.resolve(defaultEntryDir, 'client.tsx'),\n  server: path.resolve(defaultEntryDir, 'server.ts'),\n  start: path.resolve(defaultEntryDir, 'start.ts'),\n}\n\nconst isInsideRouterMonoRepo =\n  path.basename(path.resolve(currentDir, '../../../../')) === 'packages'\n\nexport function tanstackStart(\n  options?: TanStackStartInputConfig,\n): Array<PluginOption> {\n  return [\n    {\n      name: 'tanstack-react-start:config',\n      configEnvironment(environmentName, options) {\n        return {\n          resolve: {\n            dedupe: [\n              'react',\n              'react-dom',\n              '@tanstack/react-start',\n              '@tanstack/react-router',\n            ],\n            external:\n              options.resolve?.noExternal === true || !isInsideRouterMonoRepo\n                ? undefined\n                : ['@tanstack/react-router', '@tanstack/react-router-devtools'],\n          },\n          optimizeDeps:\n            environmentName === VITE_ENVIRONMENT_NAMES.client ||\n            (environmentName === VITE_ENVIRONMENT_NAMES.server &&\n              // This indicates that the server environment has opted in to dependency optimization\n              options.optimizeDeps?.noDiscovery === false)\n              ? {\n                  // As `@tanstack/react-start` depends on `@tanstack/react-router`, we should exclude both.\n                  exclude: [\n                    '@tanstack/react-start',\n                    '@tanstack/react-router',\n                    '@tanstack/react-router-devtools',\n                  ],\n                  include: [\n                    'react',\n                    'react/jsx-runtime',\n                    'react/jsx-dev-runtime',\n                    'react-dom',\n                    ...(environmentName === VITE_ENVIRONMENT_NAMES.client\n                      ? ['react-dom/client']\n                      : ['react-dom/server']),\n                    // `@tanstack/react-store` has a dependency on `use-sync-external-store`, which is CJS.\n                    // It therefore needs to be included so that it is converted to ESM.\n                    '@tanstack/react-router > @tanstack/react-store',\n                  ],\n                }\n              : undefined,\n        }\n      },\n    },\n    TanStackStartVitePluginCore(\n      {\n        framework: 'react',\n        defaultEntryPaths,\n      },\n      options,\n    ),\n  ]\n}\n"],"names":["options"],"mappings":";;;AASA,MAAM,aAAa,KAAK,QAAQ,cAAc,YAAY,GAAG,CAAC;AAC9D,MAAM,kBAAkB,KAAK;AAAA,EAC3B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AACA,MAAM,oBAAoB;AAAA,EACxB,QAAQ,KAAK,QAAQ,iBAAiB,YAAY;AAAA,EAClD,QAAQ,KAAK,QAAQ,iBAAiB,WAAW;AAAA,EACjD,OAAO,KAAK,QAAQ,iBAAiB,UAAU;AACjD;AAEA,MAAM,yBACJ,KAAK,SAAS,KAAK,QAAQ,YAAY,cAAc,CAAC,MAAM;AAEvD,SAAS,cACd,SACqB;AACrB,SAAO;AAAA,IACL;AAAA,MACE,MAAM;AAAA,MACN,kBAAkB,iBAAiBA,UAAS;AAC1C,eAAO;AAAA,UACL,SAAS;AAAA,YACP,QAAQ;AAAA,cACN;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,YAAA;AAAA,YAEF,UACEA,SAAQ,SAAS,eAAe,QAAQ,CAAC,yBACrC,SACA,CAAC,0BAA0B,iCAAiC;AAAA,UAAA;AAAA,UAEpE,cACE,oBAAoB,uBAAuB,UAC1C,oBAAoB,uBAAuB;AAAA,UAE1CA,SAAQ,cAAc,gBAAgB,QACpC;AAAA;AAAA,YAEE,SAAS;AAAA,cACP;AAAA,cACA;AAAA,cACA;AAAA,YAAA;AAAA,YAEF,SAAS;AAAA,cACP;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA,GAAI,oBAAoB,uBAAuB,SAC3C,CAAC,kBAAkB,IACnB,CAAC,kBAAkB;AAAA;AAAA;AAAA,cAGvB;AAAA,YAAA;AAAA,UACF,IAEF;AAAA,QAAA;AAAA,MAEV;AAAA,IAAA;AAAA,IAEF;AAAA,MACE;AAAA,QACE,WAAW;AAAA,QACX;AAAA,MAAA;AAAA,MAEF;AAAA,IAAA;AAAA,EACF;AAEJ;"}