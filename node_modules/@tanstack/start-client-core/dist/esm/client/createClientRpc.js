import { TSS_SERVER_FUNCTION } from "../constants.js";
import { serverFnFetcher } from "./serverFnFetcher.js";
var baseUrl;
function sanitizeBase(base) {
  return base.replace(/^\/|\/$/g, "");
}
function createClientRpc(functionId) {
  if (!baseUrl) {
    const sanitizedAppBase = sanitizeBase(process.env.TSS_APP_BASE || "/");
    const sanitizedServerBase = sanitizeBase(process.env.TSS_SERVER_FN_BASE);
    baseUrl = `${sanitizedAppBase ? `/${sanitizedAppBase}` : ""}/${sanitizedServerBase}/`;
  }
  const url = baseUrl + functionId;
  const clientFn = (...args) => {
    return serverFnFetcher(url, args, fetch);
  };
  return Object.assign(clientFn, {
    url,
    functionId,
    [TSS_SERVER_FUNCTION]: true
  });
}
export {
  createClientRpc
};
//# sourceMappingURL=createClientRpc.js.map
