{"version":3,"file":"schema.js","sources":["../../src/schema.ts"],"sourcesContent":["import path from 'node:path'\nimport { z } from 'zod'\nimport { configSchema, getConfig } from '@tanstack/router-plugin'\nimport type { TanStackStartVitePluginCoreOptions } from './plugin'\n\nconst tsrConfig = configSchema\n  .omit({ autoCodeSplitting: true, target: true, verboseFileRoutes: true })\n  .partial()\n\nexport function parseStartConfig(\n  opts: z.input<typeof tanstackStartOptionsSchema>,\n  corePluginOpts: TanStackStartVitePluginCoreOptions,\n  root: string,\n) {\n  const options = tanstackStartOptionsSchema.parse(opts)\n\n  const srcDirectory = options.srcDirectory\n\n  const routesDirectory = path.resolve(\n    srcDirectory,\n    options.router.routesDirectory ?? 'routes',\n  )\n\n  const generatedRouteTree = path.resolve(\n    srcDirectory,\n    options.router.generatedRouteTree ?? 'routeTree.gen.ts',\n  )\n\n  return {\n    ...options,\n    router: {\n      ...options.router,\n      ...getConfig(\n        {\n          ...options.router,\n          routesDirectory,\n          generatedRouteTree,\n        },\n        root,\n      ),\n      target: corePluginOpts.framework,\n    },\n  }\n}\n\nconst pageSitemapOptionsSchema = z.object({\n  exclude: z.boolean().optional(),\n  priority: z.number().min(0).max(1).optional(),\n  changefreq: z\n    .enum(['always', 'hourly', 'daily', 'weekly', 'monthly', 'yearly', 'never'])\n    .optional(),\n  lastmod: z.union([z.string(), z.date()]).optional(),\n  alternateRefs: z\n    .array(\n      z.object({\n        href: z.string(),\n        hreflang: z.string(),\n      }),\n    )\n    .optional(),\n  images: z\n    .array(\n      z.object({\n        loc: z.string(),\n        caption: z.string().optional(),\n        title: z.string().optional(),\n      }),\n    )\n    .optional(),\n  news: z\n    .object({\n      publication: z.object({\n        name: z.string(),\n        language: z.string(),\n      }),\n      publicationDate: z.union([z.string(), z.date()]),\n      title: z.string(),\n    })\n    .optional(),\n})\n\nconst pageBaseSchema = z.object({\n  path: z.string(),\n  sitemap: pageSitemapOptionsSchema.optional(),\n  fromCrawl: z.boolean().optional(),\n})\n\nconst pagePrerenderOptionsSchema = z.object({\n  enabled: z.boolean().optional(),\n  outputPath: z.string().optional(),\n  autoSubfolderIndex: z.boolean().optional(),\n  crawlLinks: z.boolean().optional(),\n  retryCount: z.number().optional(),\n  retryDelay: z.number().optional(),\n  onSuccess: z\n    .function()\n    .args(\n      z.object({\n        page: pageBaseSchema,\n        html: z.string(),\n      }),\n    )\n    .returns(z.any())\n    .optional(),\n  headers: z.record(z.string(), z.string()).optional(),\n})\n\nconst spaSchema = z.object({\n  enabled: z.boolean().optional().default(true),\n  maskPath: z.string().optional().default('/'),\n  prerender: pagePrerenderOptionsSchema\n    .optional()\n    .default({})\n    .transform((opts) => ({\n      outputPath: opts.outputPath ?? '/_shell',\n      crawlLinks: false,\n      retryCount: 0,\n      ...opts,\n      enabled: true,\n    })),\n})\n\nconst pageSchema = pageBaseSchema.extend({\n  prerender: pagePrerenderOptionsSchema.optional(),\n})\n\nconst tanstackStartOptionsSchema = z\n  .object({\n    srcDirectory: z.string().optional().default('src'),\n    start: z\n      .object({\n        entry: z.string().optional(),\n      })\n      .optional()\n      .default({}),\n    router: z\n      .object({\n        entry: z.string().optional(),\n      })\n      .and(tsrConfig.optional().default({}))\n      .optional()\n      .default({}),\n    client: z\n      .object({\n        entry: z.string().optional(),\n        base: z.string().optional().default('/_build'),\n      })\n      .optional()\n      .default({}),\n    server: z\n      .object({\n        entry: z.string().optional(),\n      })\n      .optional()\n      .default({}),\n    serverFns: z\n      .object({\n        base: z.string().optional().default('/_serverFn'),\n      })\n      .optional()\n      .default({}),\n    public: z\n      .object({\n        dir: z.string().optional().default('public'),\n        base: z.string().optional().default('/'),\n      })\n      .optional()\n      .default({}),\n    pages: z.array(pageSchema).optional().default([]),\n    sitemap: z\n      .object({\n        enabled: z.boolean().optional().default(true),\n        host: z.string().optional(),\n        outputPath: z.string().optional().default('sitemap.xml'),\n      })\n      .optional(),\n    prerender: z\n      .object({\n        enabled: z.boolean().optional(),\n        concurrency: z.number().optional(),\n        filter: z.function().args(pageSchema).returns(z.any()).optional(),\n        failOnError: z.boolean().optional(),\n      })\n      .and(pagePrerenderOptionsSchema.optional())\n      .optional(),\n    spa: spaSchema.optional(),\n    vite: z\n      .object({ installDevServerMiddleware: z.boolean().optional() })\n      .optional(),\n  })\n  .optional()\n  .default({})\n\nexport type Page = z.infer<typeof pageSchema>\n\nexport type TanStackStartInputConfig = z.input<\n  typeof tanstackStartOptionsSchema\n>\nexport type TanStackStartOutputConfig = ReturnType<typeof parseStartConfig>\n"],"names":[],"mappings":"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"}